---
name: ci

on:
  push:
    paths:
    - ".github/workflows/ci.yml"
    - ".github/workflows/custom/ci.yml"
    - ".env*"
    - lib/**
    - "*.gemspec"
    - spec/**
    - Rakefile
    - Gemfile
    - Gemfile.devtools
    - ".rubocop.yml"
    - project.yml
  pull_request:
    branches:
    - main
  create:
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby:
        - '3.3'
        - '3.2'
        - '3.1'
        include:
        - ruby: '3.4'
          coverage: 'true'
          fail_on_warnings: 'true'
          dry_types_from_main: 'true'
          sequel_from_main: 'true'
    env:
      COVERAGE: "${{matrix.coverage}}"
      COVERAGE_TOKEN: "${{secrets.CODACY_PROJECT_TOKEN}}"
      APT_DEPS: libpq-dev libmysqlclient-dev libsqlite3-dev
      FAIL_ON_WARNINGS: "${{matrix.fail_on_warnings}}"
      DRY_TYPES_FROM_MAIN: "${{matrix.dry_types_from_main}}"
      SEQUEL_FROM_MAIN: "${{matrix.sequel_from_main}}"
    services:
      mysql:
        image: mysql:8.4
        ports:
        - 3306:3306
        env:
          MYSQL_USER: rom
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: rom-sql
      postgres:
        image: postgres:16
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: rom
          POSTGRES_PASSWORD: password
          POSTGRES_DB: rom-sql
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install package dependencies
      run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{matrix.ruby}}"
    - name: Install latest bundler
      run: |
        gem install bundler --no-document
        bundle config set without 'tools benchmarks docs'
    - name: Bundle install
      run: bundle install --jobs 4 --retry 3
    - name: Run all tests
      run: bundle exec rake spec spec:compat
    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      if: env.COVERAGE == 'true' && env.COVERAGE_TOKEN != ''
      with:
        project-token: "${{secrets.CODACY_PROJECT_TOKEN}}"
        coverage-reports: coverage/coverage.xml
